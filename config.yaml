---
cog_bundle_version: 4

name: pi
version: 0.2.6
docker:
  image: pannet/pi-bundle
  tag: 0.2.6
description: Manage privacyidea user resources and tokens
long_description: >
  This bundle provides commands for viewing and manipulating users and token 
  in privacyidea.
  Permissions are used to control which users are authorized to run each command. 
  Listing and searching for resources requires the pi:read permission. 
  Modifying the objecs or other values of a resource requires the pi:write 
  permission. Other more powerful commands requires the pi:admin permission.
permissions:
  - pi:read
  - pi:write
  - pi:admin
config:
  notes: >
    Make sure the privacyidea user set in the environment variables has the necessary rights.
  env:
    - var: pi_fqdn
      description: privacyidea FQDN (missing schema default to https)
    - var: pi_username
      description: privacyidea username
    - var: pi_password
      description: privacyidea user's password
  homepage: https://gitlab.tools.in.pan-net.eu/cog-bundles/privacyidea
  author: Diogenes Santos de Jesus <diogenes.jesus@telekom.com>
commands:
  token:
    executable: /usr/bin/cog-command
    description: Perform user tokens operations
    long_description: >
      List, reset, view information of user tokens
    examples: |
      * List tokens for a given user

          !pi:token list <user> [<user> ...]


      * Reset all tokens for a user

          !pi:token reset <user>

    rules:
        - must have pi:read
templates:
  token_list:
    body: |
      ~each var=$results as=user~
      ~if cond=length($user.tokens) == 0~
      ~attachment title=$user.name color="black"~
      No token assigned for ~$user.name~
      ~end~
      ~end~
      ~if cond=length($user.tokens) > 0~
      ~each var=$user.tokens as=token~
      ~if cond=$token.failcount >= 10~
      ~attachment title=$user.name color="red"~
      **Token Serial:** ~$token.serial~
      **Token Type**: ~$token.tokentype~
      **Fail Counter:** ~$token.failcount~/~$token.maxfail~
      ~end~
      ~end~
      ~if cond=$token.failcount < 10~
      ~attachment title=$user.name color="green"~
      **Token Serial:** ~$token.serial~
      **Token Type**: ~$token.tokentype~
      **Fail Counter:** ~$token.failcount~/~$token.maxfail~
      ~end~
      ~end~
      ~end~
      ~end~
      ~end~
  token_reset:
    body: |
      ~each var=$results~
      ~if cond=$item.result == true~
      ~attachment color="green"~
      Successfully reset failcounter for all tokens belonging to ~$item.name~
      ~end~
      ~end~
      ~if cond=$item.result == false~
      ~attachment color="red"~
      Could not reset all tokens for ~$item.name~
      ~end~
      ~end~
      ~end~